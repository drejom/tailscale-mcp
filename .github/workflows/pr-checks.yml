name: PR Checks

on:
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "20"
  BUN_VERSION: "latest"

jobs:
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-pr-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linting
        run: bun run lint

      - name: Type check
        run: bun run typecheck

      - name: Run unit tests
        run: bun run test:unit:ci

      - name: Build project
        run: bun run build

      - name: Verify build artifacts
        run: |
          test -f dist/index.js
          test -f dist/index.cjs
          echo "‚úÖ Build artifacts verified"

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-security-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: |
          echo "üîç Running security audit..."
          bun audit || echo "‚ö†Ô∏è Audit found issues but continuing..."

      - name: Run dependency vulnerability check
        run: |
          echo "üîç Running dependency vulnerability check..."
          bunx audit-ci --moderate || echo "‚ö†Ô∏è Vulnerability check found issues but continuing..."
